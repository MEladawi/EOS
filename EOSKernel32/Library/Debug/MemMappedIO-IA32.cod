; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\GRAD\EOS - (KB)\EOSKernel32\Library\MemMappedIO-IA32.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_OutPortByte
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_PortNo$ = 8						; size = 2
_OutData$ = 12						; size = 1
_OutPortByte PROC
; File d:\grad\eos - (kb)\eoskernel32\library\memmappedio-ia32.c
; Line 38
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 42
  00003	66 8b 55 08	 mov	 dx, WORD PTR _PortNo$[ebp]
; Line 43
  00007	8a 45 0c	 mov	 al, BYTE PTR _OutData$[ebp]
; Line 44
  0000a	ee		 out	 dx, al
; Line 47
  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
_OutPortByte ENDP
_TEXT	ENDS
PUBLIC	_InPortByte
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_Data$ = -1						; size = 1
_PortNo$ = 8						; size = 2
_InPortByte PROC
; Line 51
  00010	55		 push	 ebp
  00011	8b ec		 mov	 ebp, esp
  00013	51		 push	 ecx
; Line 56
  00014	66 8b 55 08	 mov	 dx, WORD PTR _PortNo$[ebp]
; Line 57
  00018	ec		 in	 al, dx
; Line 58
  00019	88 45 ff	 mov	 BYTE PTR _Data$[ebp], al
; Line 61
  0001c	8a 45 ff	 mov	 al, BYTE PTR _Data$[ebp]
; Line 62
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
_InPortByte ENDP
_TEXT	ENDS
PUBLIC	_OutPortWord
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_PortNo$ = 8						; size = 2
_Data$ = 12						; size = 2
_OutPortWord PROC
; Line 66
  00030	55		 push	 ebp
  00031	8b ec		 mov	 ebp, esp
; Line 69
  00033	66 8b 55 08	 mov	 dx, WORD PTR _PortNo$[ebp]
; Line 70
  00037	66 8b 45 0c	 mov	 ax, WORD PTR _Data$[ebp]
; Line 71
  0003b	66 ef		 out	 dx, ax
; Line 74
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
_OutPortWord ENDP
_TEXT	ENDS
PUBLIC	_OutPortDWord
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_PortNo$ = 8						; size = 2
_Data$ = 12						; size = 4
_OutPortDWord PROC
; Line 78
  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
; Line 81
  00043	66 8b 55 08	 mov	 dx, WORD PTR _PortNo$[ebp]
; Line 82
  00047	8b 45 0c	 mov	 eax, DWORD PTR _Data$[ebp]
; Line 83
  0004a	ef		 out	 dx, eax
; Line 86
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
_OutPortDWord ENDP
_TEXT	ENDS
PUBLIC	_InPortWord
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_Data$ = -4						; size = 2
_PortNo$ = 8						; size = 2
_InPortWord PROC
; Line 90
  00050	55		 push	 ebp
  00051	8b ec		 mov	 ebp, esp
  00053	51		 push	 ecx
; Line 95
  00054	66 8b 55 08	 mov	 dx, WORD PTR _PortNo$[ebp]
; Line 96
  00058	66 ed		 in	 ax, dx
; Line 97
  0005a	66 89 45 fc	 mov	 WORD PTR _Data$[ebp], ax
; Line 100
  0005e	66 8b 45 fc	 mov	 ax, WORD PTR _Data$[ebp]
; Line 101
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
_InPortWord ENDP
_TEXT	ENDS
PUBLIC	_InPortDWord
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_Data$ = -4						; size = 4
_PortNo$ = 8						; size = 2
_InPortDWord PROC
; Line 105
  00070	55		 push	 ebp
  00071	8b ec		 mov	 ebp, esp
  00073	51		 push	 ecx
; Line 110
  00074	66 8b 55 08	 mov	 dx, WORD PTR _PortNo$[ebp]
; Line 111
  00078	ed		 in	 eax, dx
; Line 112
  00079	89 45 fc	 mov	 DWORD PTR _Data$[ebp], eax
; Line 115
  0007c	8b 45 fc	 mov	 eax, DWORD PTR _Data$[ebp]
; Line 116
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
_InPortDWord ENDP
_TEXT	ENDS
END
