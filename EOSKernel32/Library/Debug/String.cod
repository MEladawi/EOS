; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\GRAD\EOS - (KB)\EOSKernel32\Library\String.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_strcpy
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_save$ = -4						; size = 4
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
_strcpy	PROC
; File d:\grad\eos - (kb)\eoskernel32\library\string.c
; Line 46
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; Line 48
  00004	8b 45 08	 mov	 eax, DWORD PTR _dest$[ebp]
  00007	89 45 fc	 mov	 DWORD PTR _save$[ebp], eax
$LN2@strcpy:
; Line 49
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _dest$[ebp]
  0000d	8b 55 0c	 mov	 edx, DWORD PTR _src$[ebp]
  00010	8a 02		 mov	 al, BYTE PTR [edx]
  00012	88 01		 mov	 BYTE PTR [ecx], al
  00014	8b 4d 08	 mov	 ecx, DWORD PTR _dest$[ebp]
  00017	0f be 11	 movsx	 edx, BYTE PTR [ecx]
  0001a	8b 45 08	 mov	 eax, DWORD PTR _dest$[ebp]
  0001d	83 c0 01	 add	 eax, 1
  00020	89 45 08	 mov	 DWORD PTR _dest$[ebp], eax
  00023	8b 4d 0c	 mov	 ecx, DWORD PTR _src$[ebp]
  00026	83 c1 01	 add	 ecx, 1
  00029	89 4d 0c	 mov	 DWORD PTR _src$[ebp], ecx
  0002c	85 d2		 test	 edx, edx
  0002e	74 02		 je	 SHORT $LN1@strcpy
  00030	eb d8		 jmp	 SHORT $LN2@strcpy
$LN1@strcpy:
; Line 50
  00032	8b 45 fc	 mov	 eax, DWORD PTR _save$[ebp]
; Line 52
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_strcpy	ENDP
_TEXT	ENDS
PUBLIC	_strlen
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_len$ = -4						; size = 4
_str$ = 8						; size = 4
_strlen	PROC
; Line 59
  00040	55		 push	 ebp
  00041	8b ec		 mov	 ebp, esp
  00043	51		 push	 ecx
; Line 61
  00044	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _len$[ebp], 0
$LN2@strlen:
; Line 62
  0004b	8b 45 08	 mov	 eax, DWORD PTR _str$[ebp]
  0004e	03 45 fc	 add	 eax, DWORD PTR _len$[ebp]
  00051	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00054	8b 55 fc	 mov	 edx, DWORD PTR _len$[ebp]
  00057	83 c2 01	 add	 edx, 1
  0005a	89 55 fc	 mov	 DWORD PTR _len$[ebp], edx
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 02		 je	 SHORT $LN1@strlen
  00061	eb e8		 jmp	 SHORT $LN2@strlen
$LN1@strlen:
; Line 63
  00063	8b 45 fc	 mov	 eax, DWORD PTR _len$[ebp]
; Line 65
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
_strlen	ENDP
_TEXT	ENDS
PUBLIC	_memcpy
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_DestP$ = -8						; size = 4
_SrcP$ = -4						; size = 4
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
_count$ = 16						; size = 4
_memcpy	PROC
; Line 72
  00070	55		 push	 ebp
  00071	8b ec		 mov	 ebp, esp
  00073	83 ec 08	 sub	 esp, 8
; Line 74
  00076	8b 45 0c	 mov	 eax, DWORD PTR _src$[ebp]
  00079	89 45 fc	 mov	 DWORD PTR _SrcP$[ebp], eax
; Line 75
  0007c	8b 4d 08	 mov	 ecx, DWORD PTR _dest$[ebp]
  0007f	89 4d f8	 mov	 DWORD PTR _DestP$[ebp], ecx
  00082	eb 09		 jmp	 SHORT $LN3@memcpy
$LN2@memcpy:
; Line 76
  00084	8b 55 10	 mov	 edx, DWORD PTR _count$[ebp]
  00087	83 ea 01	 sub	 edx, 1
  0008a	89 55 10	 mov	 DWORD PTR _count$[ebp], edx
$LN3@memcpy:
  0008d	83 7d 10 00	 cmp	 DWORD PTR _count$[ebp], 0
  00091	74 1e		 je	 SHORT $LN1@memcpy
  00093	8b 45 f8	 mov	 eax, DWORD PTR _DestP$[ebp]
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _SrcP$[ebp]
  00099	8a 11		 mov	 dl, BYTE PTR [ecx]
  0009b	88 10		 mov	 BYTE PTR [eax], dl
  0009d	8b 45 f8	 mov	 eax, DWORD PTR _DestP$[ebp]
  000a0	83 c0 01	 add	 eax, 1
  000a3	89 45 f8	 mov	 DWORD PTR _DestP$[ebp], eax
  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _SrcP$[ebp]
  000a9	83 c1 01	 add	 ecx, 1
  000ac	89 4d fc	 mov	 DWORD PTR _SrcP$[ebp], ecx
  000af	eb d3		 jmp	 SHORT $LN2@memcpy
$LN1@memcpy:
; Line 77
  000b1	8b 45 08	 mov	 eax, DWORD PTR _dest$[ebp]
; Line 79
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
_memcpy	ENDP
_TEXT	ENDS
PUBLIC	_memset
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_temp$ = -4						; size = 4
_dest$ = 8						; size = 4
_val$ = 12						; size = 1
_count$ = 16						; size = 4
_memset	PROC
; Line 86
  000c0	55		 push	 ebp
  000c1	8b ec		 mov	 ebp, esp
  000c3	51		 push	 ecx
; Line 88
  000c4	8b 45 08	 mov	 eax, DWORD PTR _dest$[ebp]
  000c7	89 45 fc	 mov	 DWORD PTR _temp$[ebp], eax
  000ca	eb 14		 jmp	 SHORT $LN3@memset
$LN2@memset:
; Line 89
  000cc	8b 4d 10	 mov	 ecx, DWORD PTR _count$[ebp]
  000cf	83 e9 01	 sub	 ecx, 1
  000d2	89 4d 10	 mov	 DWORD PTR _count$[ebp], ecx
  000d5	8b 55 fc	 mov	 edx, DWORD PTR _temp$[ebp]
  000d8	03 55 10	 add	 edx, DWORD PTR _count$[ebp]
  000db	8a 45 0c	 mov	 al, BYTE PTR _val$[ebp]
  000de	88 02		 mov	 BYTE PTR [edx], al
$LN3@memset:
  000e0	83 7d 10 00	 cmp	 DWORD PTR _count$[ebp], 0
  000e4	74 02		 je	 SHORT $LN1@memset
  000e6	eb e4		 jmp	 SHORT $LN2@memset
$LN1@memset:
; Line 90
  000e8	8b 45 08	 mov	 eax, DWORD PTR _dest$[ebp]
; Line 92
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c3		 ret	 0
_memset	ENDP
_TEXT	ENDS
PUBLIC	_strcmp
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_res$ = -4						; size = 4
_str1$ = 8						; size = 4
_str2$ = 12						; size = 4
_strcmp	PROC
; Line 97
  000f0	55		 push	 ebp
  000f1	8b ec		 mov	 ebp, esp
  000f3	51		 push	 ecx
; Line 99
  000f4	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _res$[ebp], 0
$LN4@strcmp:
; Line 101
  000fb	8b 45 08	 mov	 eax, DWORD PTR _str1$[ebp]
  000fe	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00101	8b 55 0c	 mov	 edx, DWORD PTR _str2$[ebp]
  00104	0f b6 02	 movzx	 eax, BYTE PTR [edx]
  00107	2b c8		 sub	 ecx, eax
  00109	89 4d fc	 mov	 DWORD PTR _res$[ebp], ecx
  0010c	75 1e		 jne	 SHORT $LN3@strcmp
  0010e	8b 4d 0c	 mov	 ecx, DWORD PTR _str2$[ebp]
  00111	0f be 11	 movsx	 edx, BYTE PTR [ecx]
  00114	85 d2		 test	 edx, edx
  00116	74 14		 je	 SHORT $LN3@strcmp
; Line 102
  00118	8b 45 08	 mov	 eax, DWORD PTR _str1$[ebp]
  0011b	83 c0 01	 add	 eax, 1
  0011e	89 45 08	 mov	 DWORD PTR _str1$[ebp], eax
  00121	8b 4d 0c	 mov	 ecx, DWORD PTR _str2$[ebp]
  00124	83 c1 01	 add	 ecx, 1
  00127	89 4d 0c	 mov	 DWORD PTR _str2$[ebp], ecx
  0012a	eb cf		 jmp	 SHORT $LN4@strcmp
$LN3@strcmp:
; Line 104
  0012c	83 7d fc 00	 cmp	 DWORD PTR _res$[ebp], 0
  00130	7d 07		 jge	 SHORT $LN2@strcmp
; Line 105
  00132	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR _res$[ebp], -1
$LN2@strcmp:
; Line 107
  00139	83 7d fc 00	 cmp	 DWORD PTR _res$[ebp], 0
  0013d	7e 07		 jle	 SHORT $LN1@strcmp
; Line 108
  0013f	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _res$[ebp], 1
$LN1@strcmp:
; Line 110
  00146	8b 45 fc	 mov	 eax, DWORD PTR _res$[ebp]
; Line 111
  00149	8b e5		 mov	 esp, ebp
  0014b	5d		 pop	 ebp
  0014c	c3		 ret	 0
_strcmp	ENDP
_TEXT	ENDS
END
