; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\GRAD\EOS - (KB)\EOSKernel32\EOSKernel32\Main.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG1023	DB	' Lotus Operating System', 00H
$SG1024	DB	' Ready', 00H
	ORG $+1
$SG1025	DB	' Lotus Terminal#', 00H
_DATA	ENDS
PUBLIC	_main
PUBLIC	_Kernel_Entry
; Function compile flags: /Odtp
; File d:\grad\eos - (kb)\eoskernel32\eoskernel32\main.c
_TEXT	SEGMENT
_Kernel_Entry PROC

; 39   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 40   : 	//This part is architecture dependent.
; 41   : 	#ifdef TargetMachine_IA32
; 42   : 		_asm 
; 43   : 		{
; 44   : 			cli						

  00003	fa		 cli

; 45   : 			mov ax, 10h				// offset 0x10 in gdt for data selector(As sat up in boot loader.)

  00004	66 b8 10 00	 mov	 ax, 16			; 00000010H

; 46   : 			mov ds, ax

  00008	66 8e d8	 mov	 ds, ax

; 47   : 			mov es, ax

  0000b	66 8e c0	 mov	 es, ax

; 48   : 			mov fs, ax

  0000e	66 8e e0	 mov	 fs, ax

; 49   : 			mov gs, ax

  00011	66 8e e8	 mov	 gs, ax

; 50   : 			mov ss, ax				// Set up 32-bit kernel stack

  00014	66 8e d0	 mov	 ss, ax

; 51   : 			mov esp, 0x90000

  00017	bc 00 00 09 00	 mov	 esp, 589824		; 00090000H

; 52   : 			push ebp

  0001c	55		 push	 ebp

; 53   : 		}
; 54   : 	#endif
; 55   : 
; 56   : 	
; 57   : 	main();

  0001d	e8 00 00 00 00	 call	 _main

; 58   : }

  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
_Kernel_Entry ENDP
_TEXT	ENDS
EXTRN	_TryFS:PROC
EXTRN	_InitializeHDD:PROC
EXTRN	_EOS_PrintString:PROC
EXTRN	_EOS_ClearTrailer:PROC
EXTRN	_EOS_ClearHeader:PROC
EXTRN	_EOS_ClearScrean:PROC
EXTRN	_InitializeKeyboard:PROC
EXTRN	_PIC_Initialize:PROC
EXTRN	_IDT_Setup:PROC
EXTRN	_GDT_Setup:PROC
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_main	PROC

; 64   : {

  00030	55		 push	 ebp
  00031	8b ec		 mov	 ebp, esp

; 65   : 	//uint8 aa;
; 66   : 
; 67   : 
; 68   : 	GDT_Setup();

  00033	e8 00 00 00 00	 call	 _GDT_Setup

; 69   : 	IDT_Setup();

  00038	e8 00 00 00 00	 call	 _IDT_Setup

; 70   : 	PIC_Initialize();

  0003d	e8 00 00 00 00	 call	 _PIC_Initialize

; 71   : 	InitializeKeyboard();

  00042	e8 00 00 00 00	 call	 _InitializeKeyboard

; 72   : 	
; 73   : 
; 74   : 	EOS_ClearScrean (0xF0);

  00047	68 f0 00 00 00	 push	 240			; 000000f0H
  0004c	e8 00 00 00 00	 call	 _EOS_ClearScrean
  00051	83 c4 04	 add	 esp, 4

; 75   : 	EOS_ClearHeader (0x40);

  00054	6a 40		 push	 64			; 00000040H
  00056	e8 00 00 00 00	 call	 _EOS_ClearHeader
  0005b	83 c4 04	 add	 esp, 4

; 76   : 	EOS_ClearTrailer(0x00);

  0005e	6a 00		 push	 0
  00060	e8 00 00 00 00	 call	 _EOS_ClearTrailer
  00065	83 c4 04	 add	 esp, 4

; 77   : 
; 78   : 	EOS_PrintString(" Lotus Operating System",								0x4f,	0,		0);

  00068	6a 00		 push	 0
  0006a	6a 00		 push	 0
  0006c	6a 4f		 push	 79			; 0000004fH
  0006e	68 00 00 00 00	 push	 OFFSET $SG1023
  00073	e8 00 00 00 00	 call	 _EOS_PrintString
  00078	83 c4 10	 add	 esp, 16			; 00000010H

; 79   : 	EOS_PrintString(" Ready",											0x0F,	0x0,		24);

  0007b	6a 18		 push	 24			; 00000018H
  0007d	6a 00		 push	 0
  0007f	6a 0f		 push	 15			; 0000000fH
  00081	68 00 00 00 00	 push	 OFFSET $SG1024
  00086	e8 00 00 00 00	 call	 _EOS_PrintString
  0008b	83 c4 10	 add	 esp, 16			; 00000010H

; 80   : 	EOS_PrintString(" Lotus Terminal#",									0xF0,	0,		1);

  0008e	6a 01		 push	 1
  00090	6a 00		 push	 0
  00092	68 f0 00 00 00	 push	 240			; 000000f0H
  00097	68 00 00 00 00	 push	 OFFSET $SG1025
  0009c	e8 00 00 00 00	 call	 _EOS_PrintString
  000a1	83 c4 10	 add	 esp, 16			; 00000010H

; 81   : 	_asm sti

  000a4	fb		 sti

; 82   : 
; 83   : 
; 84   : 	InitializeHDD();

  000a5	e8 00 00 00 00	 call	 _InitializeHDD

; 85   : 	TryFS();

  000aa	e8 00 00 00 00	 call	 _TryFS
$LN2@main:

; 86   : 
; 87   : 	for(;;);

  000af	eb fe		 jmp	 SHORT $LN2@main

; 88   : 
; 89   : 
; 90   : #ifdef TargetMachine_IA32
; 91   : 	_asm
; 92   : 	{
; 93   : 		hlt

  000b1	f4		 hlt

; 94   : 	}
; 95   : #endif
; 96   : 	
; 97   : 
; 98   : }

  000b2	5d		 pop	 ebp
  000b3	c3		 ret	 0
_main	ENDP
_TEXT	ENDS
END
